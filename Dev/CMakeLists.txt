CMAKE_MINIMUM_REQUIRED (VERSION 3.25.2)
PROJECT (tencent-behaviac-solution
    VERSION 3.6.40
    DESCRIPTION "Fork from Tencent/behaviac to make private build."
    HOMEPAGE_URL "https://github.com/YapingXin-Aerospace/behaviac-3.6.40"
    LANGUAGES CXX C
)

SET (CMAKE_CXX_STANDARD 14)
SET (CMAKE_C_STANDARD 11)

MESSAGE (STATUS "Solution: " ${CMAKE_PROJECT_NAME})
MESSAGE (STATUS "Dev-Root BINARY dir " ${PROJECT_BINARY_DIR})
MESSAGE (STATUS "Dev-Root SOURCE dir " ${PROJECT_SOURCE_DIR})

SET (REPO_Dev_DIR ${PROJECT_SOURCE_DIR})
MESSAGE (STATUS "REPO_Dev_DIR: " ${REPO_Dev_DIR})

# Check Operating System type
MESSAGE(STATUS "CMAKE_SYSTEM_NAME : ${CMAKE_SYSTEM_NAME}")
IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
    ADD_DEFINITIONS( -D _LINUX )
    ADD_DEFINITIONS( -D __GNU__ )
    ADD_DEFINITIONS( -D __linux__ )
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    ADD_DEFINITIONS( -D _WIN32 )
    ADD_DEFINITIONS( -D WIN32 )
    ADD_DEFINITIONS( -D _WINDOWS )
    # ADD_DEFINITIONS( -D _CRT_SECURE_NO_WARNINGS )
    # ADD_DEFINITIONS( -D HAVE_VLD )
    # ADD_DEFINITIONS( -D USE_UNIXem )
ELSE ()
    MESSAGE(FATAL_ERROR "Detecting OS platform : (other than Windows or Linux) : ${CMAKE_SYSTEM_NAME}")
ENDIF ()

MESSAGE(STATUS ">>> CMAKE_GENERATOR          : ${CMAKE_GENERATOR}")


SET(EXECUTABLE_OUTPUT_PATH   ${PROJECT_BINARY_DIR}/../bin)
SET(LIBRARY_OUTPUT_PATH      ${PROJECT_BINARY_DIR}/../lib)
# SET(RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../OutRUN)
# SET(ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../OutARC)


# For Windows OS: Prompt to require CMAKE_BUILD_TYPE parameter in [Debug, Release]
IF (CMAKE_SYSTEM_NAME MATCHES "Windows")
    
    MESSAGE(STATUS ">>> CMAKE_BUILD_TYPE         : ${CMAKE_BUILD_TYPE}")

    IF ((NOT CMAKE_BUILD_TYPE STREQUAL Debug) AND 
        (NOT CMAKE_BUILD_TYPE STREQUAL Release))
        MESSAGE(STATUS ">>> Please provide the CMAKE_BUILD_TYPE parameter in [Debug, Release]")
        MESSAGE(FATAL_ERROR "" )
    ENDIF ()

    IF (MSVC)

        MESSAGE(STATUS ">>> CMAKE_GENERATOR_PLATFORM : ${CMAKE_GENERATOR_PLATFORM}")
        MESSAGE(STATUS ">>> MSVC_VERSION             : ${MSVC_VERSION}")
        MESSAGE(STATUS ">>> MSVC_TOOLSET_VERSION     : ${MSVC_TOOLSET_VERSION}")

        IF ((NOT CMAKE_GENERATOR_PLATFORM STREQUAL x64) AND 
            (NOT CMAKE_GENERATOR_PLATFORM STREQUAL Win32))
            MESSAGE(STATUS ">>> Please provide the CMAKE_GENERATOR_PLATFORM parameter in [Win32, x64]")
            MESSAGE(FATAL_ERROR "" )
        ELSE ()
            SET(EXECUTABLE_OUTPUT_PATH ${EXECUTABLE_OUTPUT_PATH}/${CMAKE_GENERATOR_PLATFORM})
            SET(LIBRARY_OUTPUT_PATH ${LIBRARY_OUTPUT_PATH}/${CMAKE_GENERATOR_PLATFORM})
        ENDIF ()
    ENDIF ()
ENDIF ()


# MESSAGE(STATUS ">>> Output Artifacts")
MESSAGE(STATUS "EXECUTABLE_OUTPUT_PATH : ${EXECUTABLE_OUTPUT_PATH}")
MESSAGE(STATUS "LIBRARY_OUTPUT_PATH    : ${LIBRARY_OUTPUT_PATH}")
# MESSAGE(STATUS "RUNTIME_OUTPUT_DIRECTORY : ${RUNTIME_OUTPUT_DIRECTORY}")
# MESSAGE(STATUS "ARCHIVE_OUTPUT_DIRECTORY : ${ARCHIVE_OUTPUT_DIRECTORY}")
# MESSAGE(STATUS "<<< Output Artifacts")
